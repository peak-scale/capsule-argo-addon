---
apiVersion: apiextensions.k8s.io/v1
kind: CustomResourceDefinition
metadata:
  annotations:
    controller-gen.kubebuilder.io/version: v0.16.3
  name: argoaddons.addons.projectcapsule.dev
spec:
  group: addons.projectcapsule.dev
  names:
    kind: ArgoAddon
    listKind: ArgoAddonList
    plural: argoaddons
    singular: argoaddon
  scope: Cluster
  versions:
  - name: v1alpha1
    schema:
      openAPIV3Schema:
        description: ArgoAddon is the Schema for the ArgoAddons API
        properties:
          apiVersion:
            description: |-
              APIVersion defines the versioned schema of this representation of an object.
              Servers should convert recognized schemas to the latest internal value, and
              may reject unrecognized values.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#resources
            type: string
          kind:
            description: |-
              Kind is a string value representing the REST resource this object represents.
              Servers may infer this from the endpoint the client submits requests to.
              Cannot be updated.
              In CamelCase.
              More info: https://git.k8s.io/community/contributors/devel/sig-architecture/api-conventions.md#types-kinds
            type: string
          metadata:
            type: object
          spec:
            description: ArgoAddonSpec defines the desired state of ArgoAddon
            properties:
              argo:
                description: Argo configuration
                properties:
                  destination:
                    default: https://kubernetes.default.svc
                    description: |-
                      If you are not using the capsule-proxy integration this destination is registered
                      for each appproject.
                    type: string
                  destinationServiceAccounts:
                    default: true
                    description: |-
                      This is a feature which will be released with argocd +v2.13.0
                      If you are not yet on that version, you can't use this feature. Currently Feature is in state Alpha
                    type: boolean
                  namespace:
                    default: argocd
                    description: Namespace where the ArgoCD instance is running
                    type: string
                  rbacConfigMap:
                    default: argocd-rbac-cm
                    description: Name of the ArgoCD rbac configmap (required for the
                      controller)
                    type: string
                  serviceAccountNamespace:
                    description: |-
                      Default Namespace to create ServiceAccounts used by arog-cd
                      The namespace must be part of capsuleUsers and have "list", "get" and "watch" privileges for the entire cluster
                      It's best to have a dedicated namespace for these serviceaccounts
                    type: string
                required:
                - serviceAccountNamespace
                type: object
              decouple:
                default: false
                description: |-
                  When decouple is enabled, appprojects are preserved even in the case when the origin tenant is deleted.
                  This can also be set on a per-tenant basis via annotations.
                type: boolean
              force:
                default: false
                description: |-
                  When force is enabled, appprojects which already exist with the same name as a tenant will be adopted
                  and overwritten. When disabled the appprojects will not be changed or adopted.
                  This is true for any other resource as well. This can also be set on a per-tenant basis via annotations.
                type: boolean
              readonly:
                default: false
                description: |-
                  All appprojects, which are collected by this controller, are set into ready-only mode
                  That means only properties from matching translators are respected. Any changes from users are
                  overwritten. This can also be set on a per-tenant basis via annotations.
                type: boolean
            required:
            - argo
            - decouple
            - force
            - readonly
            type: object
          status:
            description: ArgoAddonStatus defines the observed state of ArgoAddon
            properties:
              loaded:
                description: Last applied valid configuration
                properties:
                  argo:
                    description: Argo configuration
                    properties:
                      destination:
                        default: https://kubernetes.default.svc
                        description: |-
                          If you are not using the capsule-proxy integration this destination is registered
                          for each appproject.
                        type: string
                      destinationServiceAccounts:
                        default: true
                        description: |-
                          This is a feature which will be released with argocd +v2.13.0
                          If you are not yet on that version, you can't use this feature. Currently Feature is in state Alpha
                        type: boolean
                      namespace:
                        default: argocd
                        description: Namespace where the ArgoCD instance is running
                        type: string
                      rbacConfigMap:
                        default: argocd-rbac-cm
                        description: Name of the ArgoCD rbac configmap (required for
                          the controller)
                        type: string
                      serviceAccountNamespace:
                        description: |-
                          Default Namespace to create ServiceAccounts used by arog-cd
                          The namespace must be part of capsuleUsers and have "list", "get" and "watch" privileges for the entire cluster
                          It's best to have a dedicated namespace for these serviceaccounts
                        type: string
                    required:
                    - serviceAccountNamespace
                    type: object
                  decouple:
                    default: false
                    description: |-
                      When decouple is enabled, appprojects are preserved even in the case when the origin tenant is deleted.
                      This can also be set on a per-tenant basis via annotations.
                    type: boolean
                  force:
                    default: false
                    description: |-
                      When force is enabled, appprojects which already exist with the same name as a tenant will be adopted
                      and overwritten. When disabled the appprojects will not be changed or adopted.
                      This is true for any other resource as well. This can also be set on a per-tenant basis via annotations.
                    type: boolean
                  readonly:
                    default: false
                    description: |-
                      All appprojects, which are collected by this controller, are set into ready-only mode
                      That means only properties from matching translators are respected. Any changes from users are
                      overwritten. This can also be set on a per-tenant basis via annotations.
                    type: boolean
                required:
                - argo
                - decouple
                - force
                - readonly
                type: object
            type: object
        type: object
    served: true
    storage: true
    subresources:
      status: {}
